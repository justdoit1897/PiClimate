: ABS DUP 0< IF -1 * THEN ;
HEX
20000000 CONSTANT RPI1_BASE
: BILS 1 SWAP LSHIFT ;
: BIC INVERT AND ;
: ENABLE_PIN DUP >R @ -ROT >R BIC R> OR R> ! ;          
: DISABLE_PIN NIP DUP >R @ SWAP BIC R> ! ;
VARIABLE TIMES

: ACTIVATE 
    DEPTH 3 /
    TIMES !
    BEGIN
        ENABLE_PIN
        TIMES @ 1 - TIMES !
        TIMES @ 0=         
    UNTIL ;

: DEACTIVATE
    DEPTH 3 /
    TIMES !
    BEGIN
        DISABLE_PIN
        TIMES @ 1 - TIMES !
        TIMES @ 0=         
    UNTIL ;

RPI1_BASE 200000 +  CONSTANT GPIO_BASE
GPIO_BASE           CONSTANT GPFSEL0
GPIO_BASE 1C +      CONSTANT GPSET0
GPIO_BASE 28 +      CONSTANT GPCLR0
GPIO_BASE 34 +      CONSTANT GPLEV0
RPI1_BASE 3000 +    CONSTANT SYSTEM_TIME_BASE
SYSTEM_TIME_BASE 4 + CONSTANT CLO_REGISTER
0                   CONSTANT INP
1                   CONSTANT OUT
DECIMAL
: MILLISECONDS 1000 * ;
: DELAY CLO_REGISTER @ BEGIN 2DUP CLO_REGISTER @ - ABS SWAP > UNTIL 2DROP ;
18 BILS             CONSTANT GPIO18
: N_GPIO 0 SWAP BEGIN DUP 2 MOD 0 = IF 1 RSHIFT SWAP 1+ SWAP ELSE THEN DUP 2 = UNTIL DROP 1+ ;
: MODE SWAP LSHIFT ;
: GPFSEL N_GPIO 10 / 4 * GPFSEL0 + ;
: GPIO_LSB N_GPIO 10 MOD 3 * ;
: FSEL_MASK DUP DUP 2 + >R 1 + >R BILS 1 R> LSHIFT OR 1 R> LSHIFT OR ;
: FSEL GPIO_LSB DUP FSEL_MASK ;
: GPSET N_GPIO 32 / 4 * GPSET0 + ;
: GPCLR N_GPIO 32 / 4 * GPCLR0 + ;
: GPLEV N_GPIO 32 / 4 * GPLEV0 + ;
: ?LEV DUP GPLEV @ AND IF 1 ELSE 0 THEN ;

-40                 CONSTANT MIN_TEMP
80                  CONSTANT MAX_TEMP
0                   CONSTANT MIN_HUM
100                 CONSTANT MAX_HUM
GPIO18 CONSTANT DHT_22
: START_COND
    DUP DUP >R FSEL SWAP OUT MODE R> GPFSEL ENABLE_PIN
    DUP DUP GPCLR !
    1000 DELAY
    DUP DUP GPSET !
    DUP DUP >R FSEL SWAP INP MODE R> GPFSEL ENABLE_PIN ;
: WAIT_PULLDOWN BEGIN DUP ?LEV 0 = WHILE REPEAT DROP ;
: WAIT_PULLUP BEGIN DUPz ?LEV 1 = WHILE REPEAT DROP ;
VARIABLE DATA
VARIABLE CHECKSUM
: READ_BIT DUP DUP >R WAIT_PULLDOWN CLO_REGISTER @ SWAP WAIT_PULLUP CLO_REGISTER @ SWAP - 70 > IF 1 ELSE 0 THEN ;
: READ_DATA 
    DUP WAIT_PULLDOWN DUP WAIT_PULLUP >R
    40 BEGIN 
        DUP 7 > IF DATA ELSE CHECKSUM THEN 
        DUP @ 1 LSHIFT 
        R> READ_BIT OR SWAP ! 
        1 - DUP 32 > WHILE REPEAT 
    DROP ;
VARIABLE HUMIDITY_IP
VARIABLE HUMIDITY_DP
VARIABLE TEMPERATURE_IP
VARIABLE TEMPERATURE_DP

: MEASURE 0 DATA ! 0 CHECKSUM ! START_COND READ_DATA ;

